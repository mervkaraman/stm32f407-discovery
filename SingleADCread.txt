#include "stm32f4xx_hal.h"              // Keil::Device:STM32Cube HAL:Common
void GPIO_Config(void);
void ADC_Config(void);
void Systick_Config(void);


ADC_HandleTypeDef myADCtypeDef;//GLOBAL OLARAK TANIMLADIK ÇÜNKÜ ADC START/STOP GIBI FONKSIYONLARDA DA CAGIRABILMEK IÇIN

uint32_t adcvalue;

int main(void)
{
HAL_Init();
GPIO_Config();	
ADC_Config();
Systick_Config();
	
	while(1)
	{
		HAL_ADC_Start(&myADCtypeDef);
	if (HAL_ADC_PollForConversion(&myADCtypeDef,5)==HAL_OK)//her 5 ms de bir adc conv yapar
		{
			adcvalue=HAL_ADC_GetValue(&myADCtypeDef); //hadc1 pininden okunan deger adcvalueye ataniyor
			
		}
		HAL_ADC_Stop(&myADCtypeDef);
		HAL_Delay(100);
	}

}

void GPIO_Config(void)//gpio ayarlarini yapicaz
{
 __HAL_RCC_GPIOA_CLK_ENABLE();//A Portu için clock ayarlarini yaptik
	GPIO_InitTypeDef myADCpin;//PINI DEFINE ETTIK 
	myADCpin.Pin=GPIO_PIN_0; //HANGI PIN OLDUGUNU
	myADCpin.Mode=GPIO_MODE_ANALOG;//HANGI MODDA ÇALISACAGINI
	myADCpin.Pull=GPIO_NOPULL;//PULLUP/DOWN RES VAR MI YOK MU
	
	HAL_GPIO_Init(GPIOA,&myADCpin);
	
}

void ADC_Config(void)
{
__HAL_RCC_ADC1_CLK_ENABLE();//HANGI ADC KANALINI KULLANACAGIMIZI BELIRTMEYI UNUTMA, CLOCK AKTIVE EDILDI

myADCtypeDef.Instance=ADC1;//KULLANACAGIMIZ CHANNEL
myADCtypeDef.Init.Resolution=ADC_RESOLUTION8b;//SONUCU 8 BIT ALACAGIMIZI GÖSTERIR
myADCtypeDef.Init.EOCSelection=ADC_EOC_SINGLE_CONV;//HER CONV. SONUNDA EOC FLAG SET OLUR
myADCtypeDef.Init.DataAlign=ADC_DATAALIGN_RIGHT;//16 BITLIK ADC OKUR AMA BEN 8 BITLIK ALICAM BU YÜZDEN ALDIGI HER 16 BIT DEGERI SAGA KAYDIRSIN	
	
HAL_ADC_Init(&myADCtypeDef);
	
ADC_ChannelConfTypeDef myADCchanneltype;
myADCchanneltype.Channel=ADC_CHANNEL_0;//adc1 portunun 0.pini
myADCchanneltype.Rank=1;//1 kere okuma yapicagimiz için????
myADCchanneltype.SamplingTime=ADC_SAMPLETIME_15CYCLES;//aslinda çok önemli degil 8 de yeterdi

	
HAL_ADC_ConfigChannel(&myADCtypeDef,&myADCchanneltype);
	
}

void Systick_Config(void)
{
	//SET CLOCK SOURCE AND SPEED
HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
	//SYSTICK INTERRUPT PRIORITY AND ENABLE
HAL_NVIC_SetPriority(SysTick_IRQn,0,0);
HAL_NVIC_EnableIRQ(SysTick_IRQn);
		
}

void SysTick_Handler(void)
{
HAL_IncTick();
}
